{
  "name": "Person",
  "properties": {
    "children": {
      "type": "string",
      "description": "A child of the person."
    },
    "colleague": {
      "type": "string",
      "description": "A colleague of the person. Supersedes colleagues."
    },
    "workLocation": {
      "type": "string",
      "description": "A contact location for a person's place of work."
    },
    "homeLocation": {
      "type": "string",
      "description": "A contact location for a person's residence."
    },
    "contactPoint": {
      "type": "string",
      "description": "A contact point for a person or organization. Supersedes contactPoints."
    },
    "parent": {
      "type": "string",
      "description": "A parent of this person. Supersedes parents."
    },
    "makesOffer": {
      "type": "string",
      "description": "A pointer to products or services offered by the organization or person. Inverse property: offeredBy."
    },
    "seeks": {
      "type": "string",
      "description": "A pointer to products or services sought by the organization or person  (demand)."
    },
    "description": {
      "type": "string",
      "description": "A short description of the item."
    },
    "sibling": {
      "type": "string",
      "description": "A sibling of the person. Supersedes siblings."
    },
    "additionalName": {
      "type": "string",
      "description": "An additional name for a Person, can be used for a middle name."
    },
    "additionalType": {
      "type": "string",
      "description": "An additional type for the item, typically used for adding more specific  types from external vocabularies in microdata syntax. This is a  relationship between something and a class that the thing is in. In RDFa  syntax, it is better to use the native RDFa syntax - the 'typeof' attribute  - for multiple types. Schema.org tools may have only weaker understanding  of extra types, in particular those defined externally."
    },
    "alternateName": {
      "type": "string",
      "description": "An alias for the item."
    },
    "award": {
      "type": "string",
      "description": "An award won by or for this item. Supersedes awards."
    },
    "honorificPrefix": {
      "type": "string",
      "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr."
    },
    "honorificSuffix": {
      "type": "string",
      "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW."
    },
    "image": {
      "type": "string",
      "description": "An image of the item. This can be a URL or a fully described ImageObject."
    },
    "memberOf": {
      "type": "string",
      "description": "An Organization (or ProgramMembership) to which this Person or Organization  belongs. Inverse property: member."
    },
    "alumniOf": {
      "type": "string",
      "description": "An organization that the person is an alumni of. Inverse property: alumni."
    },
    "affiliation": {
      "type": "string",
      "description": "An organization that this person is affiliated with. For example, a  school/university, a club, or a team."
    }
  },
  "validations": [],
  "relations": {},
  "acls": [],
  "methods": {}
}
